syntax = "proto3";
package persistence.interchainquery.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "tendermint/crypto/proof.proto";

option go_package = "github.com/persistenceOne/persistence-sdk/v2/x/interchainquery/types";

// Msg defines the interchainquery Msg service.
service Msg {
  // SubmitQueryResponse defines a method for submit query responses.
  rpc SubmitQueryResponse(MsgSubmitQueryResponse)
      returns (MsgSubmitQueryResponseResponse) {
    option (google.api.http) = {
      post : "/persistence/interchainquery/tx/v1beta1/submitquery"
      body : "*"
    };
  };
}

// MsgSubmitQueryResponse represents a message type to fulfil a query request.
message MsgSubmitQueryResponse {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = true;

  string chain_id = 1 [(gogoproto.moretags) = "yaml:\"chain_id\""];
  string query_id = 2 [(gogoproto.moretags) = "yaml:\"query_id\""];
  bytes result = 3 [(gogoproto.moretags) = "yaml:\"result\""];
  tendermint.crypto.ProofOps proof_ops = 4
  [(gogoproto.moretags) = "yaml:\"proof_ops\""];
  int64 height = 5 [(gogoproto.moretags) = "yaml:\"height\""];
  string from_address = 6 [(gogoproto.moretags) = "yaml:\"from_address\""];
}

// MsgSubmitQueryResponseResponse defines the MsgSubmitQueryResponse response
// type.
message MsgSubmitQueryResponseResponse {}
