//// Code generated by protoc-gen-gogo. DO NOT EDIT.
//// source: persistence/schema/helpers/base/v1beta1/transactions1.proto
//
package test_helpers

//
//import (
//	fmt "fmt"
//	types "github.com/cosmos/cosmos-sdk/codec/types"
//	_ "github.com/gogo/protobuf/gogoproto"
//	proto "github.com/gogo/protobuf/proto"
//	"github.com/persistenceOne/persistenceSDK/schema/helpers"
//
//	//"github.com/persistenceOne/persistenceSDK/schema/helpers"
//	_ "github.com/regen-network/cosmos-proto"
//	io "io"
//	math "math"
//	math_bits "math/bits"
//)
//
//// Reference imports to suppress errors if they are not otherwise used.
//var _ = proto.Marshal
//var _ = fmt.Errorf
//var _ = math.Inf
//
//// This is a compile-time assertion to ensure that this generated file
//// is compatible with the proto package it is being compiled against.
//// A compilation error at this line likely means your copy of the
//// proto package needs to be updated.
//const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package
//
//var _ helpers.Transactions = &Transactions{}
//type Transactions struct {
//	TransactionList []*types.Any `protobuf:"bytes,1,rep,name=transactionList,proto3" json:"transactionList,omitempty"`
//}
//
//
//func (m *Transactions) Reset()         { *m = Transactions{} }
//func (m *Transactions) String() string { return proto.CompactTextString(m) }
//func (*Transactions) ProtoMessage()    {}
//func (*Transactions) Descriptor() ([]byte, []int) {
//	return fileDescriptor_bafa399af912c6b1, []int{0}
//}
//func (m *Transactions) XXX_Unmarshal(b []byte) error {
//	return m.Unmarshal(b)
//}
//func (m *Transactions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
//	if deterministic {
//		return xxx_messageInfo_Transactions.Marshal(b, m, deterministic)
//	} else {
//		b = b[:cap(b)]
//		n, err := m.MarshalToSizedBuffer(b)
//		if err != nil {
//			return nil, err
//		}
//		return b[:n], nil
//	}
//}
//func (m *Transactions) XXX_Merge(src proto.Message) {
//	xxx_messageInfo_Transactions.Merge(m, src)
//}
//func (m *Transactions) XXX_Size() int {
//	return m.Size()
//}
//func (m *Transactions) XXX_DiscardUnknown() {
//	xxx_messageInfo_Transactions.DiscardUnknown(m)
//}
//
//var xxx_messageInfo_Transactions proto.InternalMessageInfo
//
//func init() {
//	proto.RegisterType((*Transactions)(nil), "persistence.schema.helpers.base.v1beta1.transactions")
//}
//
//func init() {
//	proto.RegisterFile("persistence/schema/helpers/base/v1beta1/transactions1.proto", fileDescriptor_bafa399af912c6b1)
//}
//
//var fileDescriptor_bafa399af912c6b1 = []byte{
//	// 233 bytes of a gzipped FileDescriptorProto
//	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xb2, 0x2a, 0x48, 0x2d, 0x2a,
//	0xce, 0x2c, 0x2e, 0x49, 0xcd, 0x4b, 0x4e, 0xd5, 0x2f, 0x4e, 0xce, 0x48, 0xcd, 0x4d, 0xd4, 0xcf,
//	0x48, 0xcd, 0x01, 0x89, 0xea, 0x27, 0x25, 0x16, 0xa7, 0xea, 0x97, 0x19, 0x26, 0xa5, 0x96, 0x24,
//	0x1a, 0xea, 0x97, 0x14, 0x25, 0xe6, 0x15, 0x27, 0x26, 0x97, 0x64, 0xe6, 0xe7, 0x15, 0xeb, 0x15,
//	0x14, 0xe5, 0x97, 0xe4, 0x0b, 0xa9, 0x23, 0xe9, 0xd5, 0x83, 0xe8, 0xd5, 0x83, 0xea, 0xd5, 0x03,
//	0xe9, 0xd5, 0x83, 0xea, 0x95, 0x92, 0x4c, 0xce, 0x2f, 0xce, 0xcd, 0x2f, 0x8e, 0x07, 0x6b, 0xd3,
//	0x87, 0x70, 0x20, 0x66, 0x48, 0x89, 0xa4, 0xe7, 0xa7, 0xe7, 0x43, 0xc4, 0x41, 0x2c, 0xa8, 0xa8,
//	0x64, 0x7a, 0x7e, 0x7e, 0x7a, 0x4e, 0xaa, 0x3e, 0x98, 0x97, 0x54, 0x9a, 0xa6, 0x9f, 0x98, 0x57,
//	0x09, 0x91, 0x52, 0x4a, 0xe0, 0xe2, 0x41, 0x76, 0x8a, 0x50, 0x00, 0x17, 0x3f, 0x12, 0xdf, 0x27,
//	0xb3, 0xb8, 0x44, 0x82, 0x51, 0x81, 0x59, 0x83, 0xdb, 0x48, 0x44, 0x0f, 0x62, 0x88, 0x1e, 0xcc,
//	0x10, 0x3d, 0xc7, 0xbc, 0x4a, 0x27, 0x81, 0x53, 0x5b, 0x74, 0x79, 0x42, 0x90, 0x0c, 0x08, 0x42,
//	0xd7, 0xee, 0x64, 0x78, 0xe2, 0xa1, 0x1c, 0xc3, 0x89, 0x47, 0x72, 0x8c, 0x17, 0x1e, 0xc9, 0x31,
//	0x3e, 0x78, 0x24, 0xc7, 0x38, 0xe1, 0xb1, 0x1c, 0xc3, 0x85, 0xc7, 0x72, 0x0c, 0x37, 0x1e, 0xcb,
//	0x31, 0x44, 0x09, 0x63, 0x09, 0xa4, 0x24, 0x36, 0xb0, 0x1d, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff,
//	0xff, 0xa4, 0x77, 0xd7, 0x1e, 0x4e, 0x01, 0x00, 0x00,
//}
//
//func (m *Transactions) Marshal() (dAtA []byte, err error) {
//	size := m.Size()
//	dAtA = make([]byte, size)
//	n, err := m.MarshalToSizedBuffer(dAtA[:size])
//	if err != nil {
//		return nil, err
//	}
//	return dAtA[:n], nil
//}
//
//func (m *Transactions) MarshalTo(dAtA []byte) (int, error) {
//	size := m.Size()
//	return m.MarshalToSizedBuffer(dAtA[:size])
//}
//
//func (m *Transactions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
//	i := len(dAtA)
//	_ = i
//	var l int
//	_ = l
//	if len(m.TransactionList) > 0 {
//		for iNdEx := len(m.TransactionList) - 1; iNdEx >= 0; iNdEx-- {
//			{
//				size, err := m.TransactionList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
//				if err != nil {
//					return 0, err
//				}
//				i -= size
//				i = encodeVarintTransactions(dAtA, i, uint64(size))
//			}
//			i--
//			dAtA[i] = 0xa
//		}
//	}
//	return len(dAtA) - i, nil
//}
//
//func encodeVarintTransactions(dAtA []byte, offset int, v uint64) int {
//	offset -= sovTransactions(v)
//	base := offset
//	for v >= 1<<7 {
//		dAtA[offset] = uint8(v&0x7f | 0x80)
//		v >>= 7
//		offset++
//	}
//	dAtA[offset] = uint8(v)
//	return base
//}
//func (m *Transactions) Size() (n int) {
//	if m == nil {
//		return 0
//	}
//	var l int
//	_ = l
//	if len(m.TransactionList) > 0 {
//		for _, e := range m.TransactionList {
//			l = e.Size()
//			n += 1 + l + sovTransactions(uint64(l))
//		}
//	}
//	return n
//}
//
//func sovTransactions(x uint64) (n int) {
//	return (math_bits.Len64(x|1) + 6) / 7
//}
//func sozTransactions(x uint64) (n int) {
//	return sovTransactions(uint64((x << 1) ^ uint64((int64(x) >> 63))))
//}
//func (m *Transactions) Unmarshal(dAtA []byte) error {
//	l := len(dAtA)
//	iNdEx := 0
//	for iNdEx < l {
//		preIndex := iNdEx
//		var wire uint64
//		for shift := uint(0); ; shift += 7 {
//			if shift >= 64 {
//				return ErrIntOverflowTransactions
//			}
//			if iNdEx >= l {
//				return io.ErrUnexpectedEOF
//			}
//			b := dAtA[iNdEx]
//			iNdEx++
//			wire |= uint64(b&0x7F) << shift
//			if b < 0x80 {
//				break
//			}
//		}
//		fieldNum := int32(wire >> 3)
//		wireType := int(wire & 0x7)
//		if wireType == 4 {
//			return fmt.Errorf("proto: transactions: wiretype end group for non-group")
//		}
//		if fieldNum <= 0 {
//			return fmt.Errorf("proto: transactions: illegal tag %d (wire type %d)", fieldNum, wire)
//		}
//		switch fieldNum {
//		case 1:
//			if wireType != 2 {
//				return fmt.Errorf("proto: wrong wireType = %d for field TransactionList", wireType)
//			}
//			var msglen int
//			for shift := uint(0); ; shift += 7 {
//				if shift >= 64 {
//					return ErrIntOverflowTransactions
//				}
//				if iNdEx >= l {
//					return io.ErrUnexpectedEOF
//				}
//				b := dAtA[iNdEx]
//				iNdEx++
//				msglen |= int(b&0x7F) << shift
//				if b < 0x80 {
//					break
//				}
//			}
//			if msglen < 0 {
//				return ErrInvalidLengthTransactions
//			}
//			postIndex := iNdEx + msglen
//			if postIndex < 0 {
//				return ErrInvalidLengthTransactions
//			}
//			if postIndex > l {
//				return io.ErrUnexpectedEOF
//			}
//			m.TransactionList = append(m.TransactionList, &types.Any{})
//			if err := m.TransactionList[len(m.TransactionList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
//				return err
//			}
//			iNdEx = postIndex
//		default:
//			iNdEx = preIndex
//			skippy, err := skipTransactions(dAtA[iNdEx:])
//			if err != nil {
//				return err
//			}
//			if (skippy < 0) || (iNdEx+skippy) < 0 {
//				return ErrInvalidLengthTransactions
//			}
//			if (iNdEx + skippy) > l {
//				return io.ErrUnexpectedEOF
//			}
//			iNdEx += skippy
//		}
//	}
//
//	if iNdEx > l {
//		return io.ErrUnexpectedEOF
//	}
//	return nil
//}
//func skipTransactions(dAtA []byte) (n int, err error) {
//	l := len(dAtA)
//	iNdEx := 0
//	depth := 0
//	for iNdEx < l {
//		var wire uint64
//		for shift := uint(0); ; shift += 7 {
//			if shift >= 64 {
//				return 0, ErrIntOverflowTransactions
//			}
//			if iNdEx >= l {
//				return 0, io.ErrUnexpectedEOF
//			}
//			b := dAtA[iNdEx]
//			iNdEx++
//			wire |= (uint64(b) & 0x7F) << shift
//			if b < 0x80 {
//				break
//			}
//		}
//		wireType := int(wire & 0x7)
//		switch wireType {
//		case 0:
//			for shift := uint(0); ; shift += 7 {
//				if shift >= 64 {
//					return 0, ErrIntOverflowTransactions
//				}
//				if iNdEx >= l {
//					return 0, io.ErrUnexpectedEOF
//				}
//				iNdEx++
//				if dAtA[iNdEx-1] < 0x80 {
//					break
//				}
//			}
//		case 1:
//			iNdEx += 8
//		case 2:
//			var length int
//			for shift := uint(0); ; shift += 7 {
//				if shift >= 64 {
//					return 0, ErrIntOverflowTransactions
//				}
//				if iNdEx >= l {
//					return 0, io.ErrUnexpectedEOF
//				}
//				b := dAtA[iNdEx]
//				iNdEx++
//				length |= (int(b) & 0x7F) << shift
//				if b < 0x80 {
//					break
//				}
//			}
//			if length < 0 {
//				return 0, ErrInvalidLengthTransactions
//			}
//			iNdEx += length
//		case 3:
//			depth++
//		case 4:
//			if depth == 0 {
//				return 0, ErrUnexpectedEndOfGroupTransactions
//			}
//			depth--
//		case 5:
//			iNdEx += 4
//		default:
//			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
//		}
//		if iNdEx < 0 {
//			return 0, ErrInvalidLengthTransactions
//		}
//		if depth == 0 {
//			return iNdEx, nil
//		}
//	}
//	return 0, io.ErrUnexpectedEOF
//}
//
//var (
//	ErrInvalidLengthTransactions        = fmt.Errorf("proto: negative length found during unmarshaling")
//	ErrIntOverflowTransactions          = fmt.Errorf("proto: integer overflow")
//	ErrUnexpectedEndOfGroupTransactions = fmt.Errorf("proto: unexpected end of group")
//)
