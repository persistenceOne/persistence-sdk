// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/persistence/schema/types/base/v1beta1/metaFact.proto

package base

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_persistenceOne_persistenceSDK_schema_types "github.com/persistenceOne/persistenceSDK/schema/types"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type metaFact struct {
	Data       github_com_persistenceOne_persistenceSDK_schema_types.Data       `protobuf:"bytes,1,opt,name=Data,proto3,customtype=github.com/persistenceOne/persistenceSDK/schema/types.Data" json:"Data"`
	Signatures github_com_persistenceOne_persistenceSDK_schema_types.Signatures `protobuf:"bytes,2,opt,name=Signatures,proto3,customtype=github.com/persistenceOne/persistenceSDK/schema/types.Signatures" json:"Signatures"`
}

func (m *metaFact) Reset()         { *m = metaFact{} }
func (m *metaFact) String() string { return proto.CompactTextString(m) }
func (*metaFact) ProtoMessage()    {}
func (*metaFact) Descriptor() ([]byte, []int) {
	return fileDescriptor_3738c10c17a9ef35, []int{0}
}
func (m *metaFact) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *metaFact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MetaFact.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *metaFact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaFact.Merge(m, src)
}
func (m *metaFact) XXX_Size() int {
	return m.Size()
}
func (m *metaFact) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaFact.DiscardUnknown(m)
}

var xxx_messageInfo_MetaFact proto.InternalMessageInfo

func init() {
	proto.RegisterType((*metaFact)(nil), "persistence.schema.types.base.v1beta1.metaFact")
}

func init() {
	proto.RegisterFile("proto/persistence/schema/types/base/v1beta1/metaFact.proto", fileDescriptor_3738c10c17a9ef35)
}

var fileDescriptor_3738c10c17a9ef35 = []byte{
	// 260 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xb2, 0x2a, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0x48, 0x2d, 0x2a, 0xce, 0x2c, 0x2e, 0x49, 0xcd, 0x4b, 0x4e, 0xd5, 0x2f, 0x4e,
	0xce, 0x48, 0xcd, 0x4d, 0xd4, 0x2f, 0xa9, 0x2c, 0x48, 0x2d, 0xd6, 0x4f, 0x4a, 0x2c, 0x4e, 0xd5,
	0x2f, 0x33, 0x4c, 0x4a, 0x2d, 0x49, 0x34, 0xd4, 0xcf, 0x4d, 0x2d, 0x49, 0x74, 0x4b, 0x4c, 0x2e,
	0xd1, 0x03, 0x6b, 0x12, 0x52, 0x45, 0xd2, 0xa5, 0x07, 0xd1, 0xa5, 0x07, 0xd6, 0xa5, 0x07, 0xd2,
	0xa5, 0x07, 0xd5, 0x25, 0xa5, 0x56, 0x92, 0x91, 0x59, 0x94, 0x12, 0x5f, 0x90, 0x58, 0x54, 0x52,
	0xa9, 0x0f, 0xb1, 0x2e, 0x3d, 0x3f, 0x3d, 0x1f, 0xc1, 0x82, 0x18, 0xa7, 0x74, 0x8d, 0x91, 0x8b,
	0x03, 0x66, 0x83, 0x50, 0x18, 0x17, 0x8b, 0x4b, 0x62, 0x49, 0xa2, 0x04, 0xa3, 0x02, 0xa3, 0x06,
	0xa7, 0x93, 0xd3, 0x89, 0x7b, 0xf2, 0x0c, 0xb7, 0xee, 0xc9, 0x5b, 0xa5, 0x67, 0x96, 0x64, 0x94,
	0x26, 0xe9, 0x25, 0xe7, 0xe7, 0x22, 0x3b, 0xd9, 0x3f, 0x2f, 0x15, 0x99, 0x1b, 0xec, 0xe2, 0x8d,
	0xe2, 0x09, 0x3d, 0x90, 0x49, 0x41, 0x60, 0xf3, 0x84, 0x32, 0xb8, 0xb8, 0x82, 0x33, 0xd3, 0xf3,
	0x12, 0x4b, 0x4a, 0x8b, 0x52, 0x8b, 0x25, 0x98, 0xc0, 0xa6, 0x7b, 0x40, 0x4d, 0x77, 0x20, 0xcf,
	0x74, 0x84, 0x79, 0x41, 0x48, 0x66, 0x5b, 0x71, 0x74, 0x2c, 0x90, 0x67, 0x78, 0xb1, 0x40, 0x9e,
	0xc1, 0x49, 0xfb, 0xc4, 0x23, 0x39, 0xc6, 0x0b, 0x8f, 0xe4, 0x18, 0x1f, 0x3c, 0x92, 0x63, 0x9c,
	0xf0, 0x58, 0x8e, 0xe1, 0xc2, 0x63, 0x39, 0x86, 0x1b, 0x8f, 0xe5, 0x18, 0xa2, 0x04, 0x31, 0xc2,
	0x3a, 0x89, 0x0d, 0x1c, 0x18, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x16, 0xb1, 0xa0, 0x67,
	0x99, 0x01, 0x00, 0x00,
}

func (m *metaFact) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m metaFact) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *metaFact) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Signatures.Size() > 0 {
		i -= m.Signatures.Size()
		if _, err := m.Signatures.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMetaFact(dAtA, i, uint64(m.Signatures.Size()))
		i--
		dAtA[i] = 0x12
	}
	if m.Data.Size() > 0 {
		i -= m.Data.Size()
		if _, err := m.Data.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMetaFact(dAtA, i, uint64(m.Data.Size()))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintMetaFact(dAtA []byte, offset int, v uint64) int {
	offset -= sovMetaFact(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m metaFact) Size() (n int) {
	var l int
	_ = l
	l = m.Data.Size()
	if l > 0 {
		n += 1 + l + sovMetaFact(uint64(l))
	}
	l = m.Signatures.Size()
	if l > 0 {
		n += 1 + l + sovMetaFact(uint64(l))
	}
	return n
}

func sovMetaFact(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMetaFact(x uint64) (n int) {
	return sovMetaFact(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m metaFact) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetaFact
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: metaFact: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: metaFact: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetaFact
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetaFact
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetaFact
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signatures", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetaFact
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetaFact
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetaFact
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Signatures.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetaFact(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetaFact
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMetaFact(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMetaFact
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMetaFact
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMetaFact
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMetaFact
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMetaFact
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMetaFact
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMetaFact        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMetaFact          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMetaFact = fmt.Errorf("proto: unexpected end of group")
)
