// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/persistence/assets/orders/transactions/define/v1beta1/request.proto

package define

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	test_types "github.com/persistenceOne/persistenceSDK/schema/test_types"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation Error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type transactionRequest struct {
	BaseReq                 test_types.BaseReq `protobuf:"bytes,1,opt,name=base_req,json=baseReq,proto3" json:"baseReq"`
	FromID                  string             `protobuf:"bytes,2,opt,name=fromID,proto3" json:"fromID,omitempty" valid:"required~required field fromID missing, matches(^[A-Za-z0-9-_=.|]+$)~invalid field fromID"`
	ImmutableMetaProperties string             `protobuf:"bytes,3,opt,name=ImmutableMetaProperties,proto3" json:"ImmutableMetaProperties,omitempty" valid:"required~required field immutableMetaProperties missing, matches(^.*$)~invalid field immutableMetaProperties"`
	ImmutableProperties     string             `protobuf:"bytes,4,opt,name=ImmutableProperties,proto3" json:"ImmutableProperties,omitempty" valid:"required~required field immutableProperties missing, matches(^.*$)~invalid field immutableProperties"`
	MutableMetaProperties   string             `protobuf:"bytes,5,opt,name=MutableMetaProperties,proto3" json:"MutableMetaProperties,omitempty" valid:"required~required field mutableMetaProperties missing, matches(^.*$)~invalid field mutableMetaProperties"`
	MutableProperties       string             `protobuf:"bytes,6,opt,name=MutableProperties,proto3" json:"MutableProperties,omitempty" valid:"required~required field mutableProperties missing, matches(^.*$)~invalid field mutableProperties"`
}

func (m *transactionRequest) Reset()         { *m = transactionRequest{} }
func (m *transactionRequest) String() string { return proto.CompactTextString(m) }
func (*transactionRequest) ProtoMessage()    {}
func (*transactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_59b6a0105fb6c008, []int{0}
}
func (m *transactionRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *transactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TransactionRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *transactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionRequest.Merge(m, src)
}
func (m *transactionRequest) XXX_Size() int {
	return m.Size()
}
func (m *transactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionRequest proto.InternalMessageInfo

func init() {
	proto.RegisterType((*transactionRequest)(nil), "persistence.assets.orders.transactions.define.v1beta1.transactionRequest")
}

func init() {
	proto.RegisterFile("proto/persistence/assets/orders/transactions/define/v1beta1/request.proto", fileDescriptor_59b6a0105fb6c008)
}

var fileDescriptor_59b6a0105fb6c008 = []byte{
	// 365 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xc1, 0x4e, 0xea, 0x40,
	0x14, 0x86, 0x5b, 0x2e, 0x97, 0xcb, 0x9d, 0xbb, 0xba, 0x63, 0x54, 0xc2, 0xa2, 0x10, 0x17, 0x86,
	0x44, 0x33, 0x23, 0xa2, 0x89, 0x71, 0x49, 0x74, 0xd1, 0x05, 0x89, 0xe9, 0xd2, 0x0d, 0x99, 0xd2,
	0x03, 0x36, 0xa1, 0x9d, 0x76, 0xce, 0x60, 0xe2, 0x1b, 0xb8, 0xf4, 0x11, 0x78, 0x1c, 0x96, 0xb8,
	0x73, 0x65, 0x0c, 0x6c, 0x7c, 0x0c, 0x43, 0x07, 0xa1, 0x09, 0x75, 0x37, 0x27, 0xff, 0xf9, 0xbf,
	0xff, 0x4f, 0xe6, 0x10, 0x37, 0x51, 0x52, 0x4b, 0x9e, 0x80, 0xc2, 0x10, 0x35, 0xc4, 0x03, 0xe0,
	0x02, 0x11, 0x34, 0x72, 0xa9, 0x02, 0x50, 0xc8, 0xb5, 0x12, 0x31, 0x8a, 0x81, 0x0e, 0x65, 0x8c,
	0x3c, 0x80, 0x61, 0x18, 0x03, 0x7f, 0x6c, 0xfb, 0xa0, 0x45, 0x9b, 0x2b, 0x48, 0x27, 0x80, 0x9a,
	0x65, 0x0c, 0x7a, 0x99, 0x83, 0x30, 0x03, 0x61, 0x06, 0xc2, 0xf2, 0x10, 0x66, 0x20, 0x6c, 0x0d,
	0xa9, 0x1f, 0xeb, 0x87, 0x50, 0x05, 0xfd, 0x44, 0x28, 0xfd, 0xc4, 0x4d, 0x9b, 0x91, 0x1c, 0xc9,
	0xed, 0xcb, 0xe0, 0xeb, 0x9d, 0xdd, 0xa6, 0x03, 0x89, 0x91, 0x44, 0xee, 0x0b, 0xdc, 0x76, 0x5a,
	0x0d, 0x0a, 0x52, 0x63, 0x3a, 0x7a, 0x2d, 0x11, 0x9a, 0x0b, 0xf7, 0x4c, 0x61, 0xea, 0x92, 0xea,
	0x6a, 0xaf, 0xaf, 0x20, 0xad, 0xd9, 0x4d, 0xbb, 0xf5, 0xef, 0xbc, 0xc5, 0xf2, 0xed, 0x0d, 0x98,
	0xad, 0x76, 0xbe, 0x7b, 0xb2, 0xae, 0x40, 0xf0, 0x20, 0xed, 0x96, 0x67, 0xef, 0x0d, 0xcb, 0xfb,
	0xe3, 0x9b, 0x91, 0x1e, 0x90, 0xca, 0x50, 0xc9, 0xc8, 0xbd, 0xa9, 0x95, 0x9a, 0x76, 0xeb, 0xaf,
	0xb7, 0x9e, 0xe8, 0x15, 0x39, 0x74, 0xa3, 0x68, 0xa2, 0x85, 0x3f, 0x86, 0x1e, 0x68, 0x71, 0xa7,
	0x64, 0x02, 0x4a, 0x87, 0x80, 0xb5, 0x5f, 0xd9, 0xe2, 0x4f, 0x32, 0x3d, 0x23, 0x7b, 0x1b, 0x29,
	0xe7, 0x2a, 0x67, 0xae, 0x22, 0x89, 0x5e, 0x90, 0xfd, 0x5e, 0x61, 0xd2, 0xef, 0xcc, 0x53, 0x2c,
	0xd2, 0x53, 0xf2, 0xbf, 0xb7, 0x93, 0x52, 0xc9, 0x1c, 0xbb, 0xc2, 0x75, 0xf5, 0x79, 0xda, 0xb0,
	0x3e, 0xa7, 0x0d, 0xab, 0x7b, 0x3b, 0x5b, 0x38, 0xf6, 0x7c, 0xe1, 0xd8, 0x1f, 0x0b, 0xc7, 0x7e,
	0x59, 0x3a, 0xd6, 0x7c, 0xe9, 0x58, 0x6f, 0x4b, 0xc7, 0xba, 0x3f, 0x89, 0x64, 0x30, 0x19, 0xc3,
	0xe6, 0x76, 0xc2, 0x58, 0x83, 0x8a, 0xc5, 0xb8, 0xe8, 0x88, 0xfc, 0x4a, 0xf6, 0x43, 0x9d, 0xaf,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xac, 0xd1, 0x58, 0x74, 0x82, 0x02, 0x00, 0x00,
}

func (m *transactionRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *transactionRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *transactionRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MutableProperties) > 0 {
		i -= len(m.MutableProperties)
		copy(dAtA[i:], m.MutableProperties)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.MutableProperties)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.MutableMetaProperties) > 0 {
		i -= len(m.MutableMetaProperties)
		copy(dAtA[i:], m.MutableMetaProperties)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.MutableMetaProperties)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ImmutableProperties) > 0 {
		i -= len(m.ImmutableProperties)
		copy(dAtA[i:], m.ImmutableProperties)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.ImmutableProperties)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ImmutableMetaProperties) > 0 {
		i -= len(m.ImmutableMetaProperties)
		copy(dAtA[i:], m.ImmutableMetaProperties)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.ImmutableMetaProperties)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.FromID) > 0 {
		i -= len(m.FromID)
		copy(dAtA[i:], m.FromID)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.FromID)))
		i--
		dAtA[i] = 0x12
	}
	{
		size, err := m.BaseReq.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintRequest(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintRequest(dAtA []byte, offset int, v uint64) int {
	offset -= sovRequest(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *transactionRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.BaseReq.Size()
	n += 1 + l + sovRequest(uint64(l))
	l = len(m.FromID)
	if l > 0 {
		n += 1 + l + sovRequest(uint64(l))
	}
	l = len(m.ImmutableMetaProperties)
	if l > 0 {
		n += 1 + l + sovRequest(uint64(l))
	}
	l = len(m.ImmutableProperties)
	if l > 0 {
		n += 1 + l + sovRequest(uint64(l))
	}
	l = len(m.MutableMetaProperties)
	if l > 0 {
		n += 1 + l + sovRequest(uint64(l))
	}
	l = len(m.MutableProperties)
	if l > 0 {
		n += 1 + l + sovRequest(uint64(l))
	}
	return n
}

func sovRequest(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozRequest(x uint64) (n int) {
	return sovRequest(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *transactionRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequest
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: transactionRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: transactionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BaseReq", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.BaseReq.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FromID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImmutableMetaProperties", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ImmutableMetaProperties = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImmutableProperties", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ImmutableProperties = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MutableMetaProperties", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MutableMetaProperties = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MutableProperties", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MutableProperties = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequest(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRequest
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRequest(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRequest
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthRequest
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupRequest
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthRequest
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthRequest        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRequest          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupRequest = fmt.Errorf("proto: unexpected end of group")
)
